I"
<h1 id="third-maximum-number">Third Maximum Number</h1>

<p>Given an integer array nums, return the third distinct maximum number in this array. If the third maximum does not exist, return the maximum number.</p>

<h5 id="example-1">Example 1:</h5>
<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Input: nums = [3,2,1]
Output: 1
Explanation:
The first distinct maximum is 3.
The second distinct maximum is 2.
The third distinct maximum is 1.
</code></pre></div></div>
<h5 id="example-2">Example 2:</h5>
<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Input: nums = [1,2]
Output: 2
Explanation:
The first distinct maximum is 2.
The second distinct maximum is 1.
The third distinct maximum does not exist, so the maximum (2) is returned instead.
</code></pre></div></div>
<h5 id="example-3">Example 3:</h5>
<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Input: nums = [2,2,3,1]
Output: 1
Explanation:
The first distinct maximum is 3.
The second distinct maximum is 2 (both 2's are counted together since they have the same value).
The third distinct maximum is 1.
</code></pre></div></div>
<h5 id="constraints">Constraints:</h5>
<ul>
  <li>1 &lt;= nums.length &lt;= 104</li>
  <li>-231 &lt;= nums[i] &lt;= 231 - 1</li>
</ul>

<h3 id="solution">Solution:</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">thirdMax</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">nums</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">long</span> <span class="n">max</span> <span class="o">=</span> <span class="nc">Long</span><span class="o">.</span><span class="na">MIN_VALUE</span><span class="o">;</span>
        <span class="kt">long</span> <span class="n">secondMax</span> <span class="o">=</span> <span class="n">max</span><span class="o">;</span>
        <span class="kt">long</span> <span class="n">thirdMax</span> <span class="o">=</span> <span class="n">secondMax</span><span class="o">;</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">nums</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="k">if</span><span class="o">(</span><span class="n">nums</span><span class="o">[</span><span class="n">i</span><span class="o">]&gt;</span><span class="n">max</span><span class="o">){</span>
                <span class="n">thirdMax</span> <span class="o">=</span> <span class="n">secondMax</span><span class="o">;</span>
                <span class="n">secondMax</span> <span class="o">=</span> <span class="n">max</span><span class="o">;</span>
                <span class="n">max</span> <span class="o">=</span> <span class="n">nums</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">nums</span><span class="o">[</span><span class="n">i</span><span class="o">]&lt;</span><span class="n">max</span> <span class="o">&amp;&amp;</span> <span class="n">nums</span><span class="o">[</span><span class="n">i</span><span class="o">]&gt;</span><span class="n">secondMax</span><span class="o">){</span>
                <span class="n">thirdMax</span> <span class="o">=</span> <span class="n">secondMax</span><span class="o">;</span>
                <span class="n">secondMax</span> <span class="o">=</span> <span class="n">nums</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">nums</span><span class="o">[</span><span class="n">i</span><span class="o">]&lt;</span><span class="n">secondMax</span> <span class="o">&amp;&amp;</span> <span class="n">nums</span><span class="o">[</span><span class="n">i</span><span class="o">]&gt;</span><span class="n">thirdMax</span><span class="o">){</span>
                <span class="n">thirdMax</span> <span class="o">=</span> <span class="n">nums</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span>  <span class="n">thirdMax</span><span class="o">==</span><span class="nc">Long</span><span class="o">.</span><span class="na">MIN_VALUE</span> <span class="o">?</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="n">max</span> <span class="o">:</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="n">thirdMax</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
:ET