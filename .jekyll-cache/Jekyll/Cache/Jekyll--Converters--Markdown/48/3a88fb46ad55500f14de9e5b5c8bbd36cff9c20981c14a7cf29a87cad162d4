I"_<h1 id="sum-of-left-leaves">Sum of Left Leaves</h1>

<p>Given the root of a binary tree, return the sum of all left leaves.</p>

<p>A leaf is a node with no children. A left leaf is a leaf that is the left child of another node.</p>

<h5 id="example-1">Example 1:</h5>
<p><img src="../../assets/images/ds/leftsum-tree.jpeg" alt="" /></p>
<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Input: root = [3,9,20,null,null,15,7]
Output: 24
Explanation: There are two left leaves in the binary tree, with values 9 and 15 respectively.
</code></pre></div></div>
<h5 id="example-2">Example 2:</h5>
<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Input: root = [1]
Output: 0
</code></pre></div></div>
<h5 id="constraints">Constraints:</h5>
<ul>
  <li>The number of nodes in the tree is in the range [1, 1000].</li>
  <li>-1000 &lt;= Node.val &lt;= 1000</li>
</ul>

<h3 id="solution">Solution</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
</code></pre></div></div>

:ET